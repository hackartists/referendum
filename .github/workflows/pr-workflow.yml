name: PR Testing

on:
  pull_request:
      types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always

jobs:
  main-ui:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - uses: cargo-bins/cargo-binstall@main

      - name: Install dioxus-cli
        run: |
          cargo binstall dioxus-cli
          cargo binstall toml-cli

      - name: Checking violate
        env:
          REGION: ap-northeast-2
          SERVICE: main-ui
        run: |
          dx check -p $SERVICE

      - name: Build UI
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ""
          SECRET_ACCESS_KEY: ""
          ENV: dev
          SERVICE: main-ui
          API_PREFIX: /api
        run: |
          npm i -g tailwindcss
          make build

  main-api:
    runs-on: ubuntu-22.04
    container: rust:slim
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: referendum
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - uses: cargo-bins/cargo-binstall@main
      - name: Install toml-cli
        run: |
          cargo binstall toml-cli

      - name: Build APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENV: dev
          SERVICE: main-api
        run: |
          make build
